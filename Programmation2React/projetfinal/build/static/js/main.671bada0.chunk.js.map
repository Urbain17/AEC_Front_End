{"version":3,"sources":["components/Auto.js","components/AjouterAuto.js","constantes.js","components/FormAjouterAuto.js","components/Slider.js","components/AfficherAuto.js","components/Menu.js","components/FormEditerAuto.js","components/PageNotFound.js","components/App.js","serviceWorker.js","index.js"],"names":["Auto","props","Col","lg","className","Card","Img","variant","src","this","image","style","width","Body","Title","to","marque","idVoiture","Text","kilometrage","annee","prix","React","Component","API","FormAjouterAuto","state","handleAjouter","bind","ajouterAuto","handleImage","console","log","fetch","method","headers","body","JSON","stringify","response","ok","json","jsonResponse","history","push","toast","success","Error","event","preventDefault","document","getElementById","value","setState","Form","Group","controlId","Label","Control","type","placeholder","onBlur","Image","rounded","Button","onClick","Slider","left","Jumbotron","AfficherAuto","useState","donneesRecues","setDonneesRecues","a","reponseDeApi","statusText","useEffect","getAutos","join","Row","map","key","i","_id","Menu","Navbar","bg","Brand","href","Nav","exact","FormEditerAuto","location","search","substring","length","autoID","setImage","error","getAutoInfos","defaultValue","editerAuto","PageNotFound","App","Container","autoClose","hideProgressBar","path","component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","URL","process","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.671bada0.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Card, Col} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class Auto extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n            <Col lg='4' className='mt-4'>\r\n        <Card>\r\n        <Card.Img variant=\"top\" src={this.props.image} style={{width:\"100%\"}} />\r\n        <Card.Body>\r\n          <Card.Title>\r\n          <Link\r\n              to={\r\n                'TypeVoiture/' +\r\n                this.props.marque +\r\n                '?id=' +\r\n                this.props.idVoiture\r\n              \r\n            }\r\n\r\n            >\r\n             {this.props.marque} \r\n              </Link>\r\n          </Card.Title>\r\n\r\n          <Card.Text>\r\n            <div>kilometrage: {this.props.kilometrage}</div>\r\n            <div>ann√©e: {this.props.annee}</div>\r\n            <div>prix: {this.props.prix}</div>\r\n          </Card.Text>\r\n          \r\n        </Card.Body>\r\n      </Card>\r\n      </Col>\r\n            </>)\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport {Form} from 'react-bootstrap';\r\n\r\nexport class AjouterAuto extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        return(\r\n            <>\r\n                <Form>\r\n    <Form.Group controlId=\"marque\">\r\n    <Form.Label>Marque</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Marque\" />\r\n     </Form.Group>\r\n     <Form.Group controlId=\"kilometrage\">\r\n    <Form.Label>kilometrage</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Kilometrage\" />\r\n     </Form.Group>\r\n     <Form.Group controlId=\"annee\">\r\n    <Form.Label>annee</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Annee\" />\r\n     </Form.Group>\r\n     <Form.Group controlId=\"prix\">\r\n    <Form.Label>Prix</Form.Label>\r\n    <Form.Control type=\"text\" placeholder=\"Prix\" />\r\n     </Form.Group>\r\n    </Form>\r\n    <p className='btn btn-primary'>Ajouter une auto</p>\r\n            </>\r\n        \r\n        )\r\n    }\r\n\r\n    \r\n}","export const API = \"https://crudcrud.com/api/e96539309a7a41dea1777929170b1ddf/autos/\";","import React from \"react\";\r\nimport { Form, Button, Image } from \"react-bootstrap\";\r\nimport {toast} from \"react-toastify\";\r\nimport {API} from \"../constantes\";\r\n\r\nexport class FormAjouterAuto extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {image: \"\"};\r\n\r\n    this.handleAjouter = this.handleAjouter.bind(this);\r\n    this.ajouterAuto =this.ajouterAuto.bind(this);\r\n   this.handleImage = this.handleImage.bind(this);\r\n  }\r\n\r\n  async ajouterAuto(marque,image,kilometrage, annee, prix) { \r\n    try{ \r\n        console.log(marque,image,kilometrage,annee,prix);\r\n      const response = await fetch(API, { \r\n        method:'POST', \r\n        headers: {'Content-Type': 'application/json'  }, \r\n        body : JSON.stringify({\r\n          marque: marque,\r\n          image: image,\r\n          kilometrage: kilometrage,\r\n          annee:annee,\r\n          prix:prix,\r\n          \r\n        }) \r\n      \r\n      }); \r\n     \r\n      if(response.ok){  \r\n        \r\n        const jsonResponse = await response.json(); \r\n        this.props.history.push(\"/\");\r\n        toast.success(\"Ajout auto \" + marque);\r\n\r\n        return jsonResponse; \r\n      } \r\n      throw new Error('Request failed!'); \r\n  } \r\n   catch(error){ \r\n      console.log(error); \r\n   } \r\n} \r\n \r\n  handleAjouter(event){\r\n    event.preventDefault();\r\n    \r\n    const marque = document.getElementById('marque').value;\r\n    const image = document.getElementById('image').value;\r\n    const kilometrage = document.getElementById('kilometrage').value;\r\n    const annee = document.getElementById('annee').value;\r\n    const prix = document.getElementById('prix').value;\r\n   \r\n    this.ajouterAuto(marque,image,kilometrage,annee,prix);\r\n  }\r\n\r\n   handleImage(event){\r\n  const image = document.getElementById('image').value;\r\n   this.setState( {image : image});\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Form>\r\n          \r\n          <Form.Group controlId=\"marque\">\r\n            <Form.Label>Marque</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Marque\" />\r\n     </Form.Group>\r\n     <Form.Group controlId=\"image\">\r\n            <Form.Label>Image</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"image\"  onBlur={this.handleImage} />\r\n     </Form.Group>\r\n     {this.state.image !== \"\" && <Image src={this.state.image} rounded width=\"125\"/>}\r\n     <Form.Group controlId=\"kilometrage\">\r\n            <Form.Label>kilometrage</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Kilometrage\" />\r\n     </Form.Group>\r\n     <Form.Group controlId=\"annee\">\r\n            <Form.Label>annee</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Annee\" />\r\n     </Form.Group>\r\n     <Form.Group controlId=\"prix\">\r\n            <Form.Label>Prix</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Prix\" />\r\n     </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\" onClick={this.handleAjouter}>\r\n            Soumettre\r\n        </Button>\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {Jumbotron} from 'react-bootstrap';\r\nimport {Zoom, Fade, Roll} from 'react-reveal';\r\n\r\nexport class Slider extends React.Component {\r\n    \r\n    render(){\r\n        return(\r\n            <>\r\n\r\n            <Roll left>\r\n                <Jumbotron>\r\n                    <h1>Bienvenue sur le site de vente des autos</h1>\r\n                </Jumbotron>\r\n            </Roll>\r\n\r\n            </>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Row } from \"react-bootstrap\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Image} from \"react-bootstrap\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {toast} from \"react-toastify\";\r\nimport {API} from \"../constantes\";\r\nimport { Auto } from \"./Auto\";\r\nimport { Slider } from './Slider';\r\n\r\n\r\nfunction AfficherAuto() {\r\n    const [donneesRecues, setDonneesRecues] = useState([]);\r\n  \r\n    //Ajout de la gestion des erreurs\r\n    useEffect(() => {\r\n      getAutos();\r\n    }, [donneesRecues.join(\",\")]); //Si on enl√®ve le second param√®tre, on obtient une boucle infinie.\r\n  \r\n    async function getAutos() {\r\n      try {\r\n        const response = await fetch(API);\r\n        const reponseDeApi = await response.json();\r\n        setDonneesRecues(reponseDeApi);\r\n        if (!response.ok) {\r\n          throw Error(response.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  \r\n    return (\r\n      <>\r\n      <Slider></Slider>\r\n        <h1>Affichage de la liste de toutes les autos</h1>\r\n        <Row>\r\n        {donneesRecues.map((key, i) => (\r\n          <Auto idVoiture={key._id} marque={key.marque} key={key.marque + key._id} image={key.image} prix={key.prix } kilometrage={key.kilometrage} annee={key.annee}></Auto>\r\n        ))}\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n  \r\n  export default AfficherAuto;\r\n  ","import React from \"react\";\r\nimport { Nav, Navbar, Button } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport class Menu extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <>\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n          <Navbar.Brand href=\"/\">Projet final</Navbar.Brand>\r\n          <Nav className=\"mr-auto decormenu\">\r\n            <NavLink exact to=\"/\" >\r\n              Accueil\r\n            </NavLink>{\" \"}\r\n            {\"  |  \"}\r\n            <NavLink to=\"/Ajouter\" >\r\n              Ajouter une auto\r\n            </NavLink>{\" \"}\r\n            \r\n          </Nav>\r\n        </Navbar>\r\n        <br />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React , {useState , useEffect} from \"react\";\r\nimport { Form, Button,Image,Container,Row,Col } from \"react-bootstrap\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {API} from \"../constantes\";\r\nimport {toast} from \"react-toastify\"\r\n\r\nfunction FormEditerAuto(props){\r\n  const [donneesRecues , setDonneesRecues] = useState({marque:'',image:'',kilometrage:'', annee:'', prix:''});\r\n  const [autoID , setAutoID] = useState(props.location.search.substring(4,props.location.search.length));\r\n  const [image , setImage] = useState(\"\");\r\n  //Ajout de la gestion des erreurs\r\n  useEffect(() => {\r\n    getAutoInfos();\r\n  },[]); //Si on enl√®ve le second param√®tre, on obtient une boucle infinie.\r\n\r\n  //On r√©cup√®re le Pokemon pour ensuite remplir le formulaire.\r\n  async function getAutoInfos() {\r\n    try {\r\n      \r\n      const response = await fetch(API + autoID);\r\n      const reponseDeApi = await response.json();\r\n      setDonneesRecues(reponseDeApi);\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async function editerAuto(marque,image,kilometrage, annee, prix) { \r\n    try{ \r\n      const response = await fetch(API + autoID, { \r\n        method:'PUT', \r\n        headers: {'Content-Type': 'application/json'  }, \r\n        body:JSON.stringify({\r\n            marque: marque,\r\n            image: image,\r\n            kilometrage: kilometrage,\r\n            annee:annee,\r\n            prix:prix,\r\n        }) \r\n      }); \r\n      if(response.ok){ \r\n        props.history.push(\"/\");\r\n        toast.success(\"Modification de l'auto\" + marque);\r\n\r\n        return response; \r\n      } \r\n      throw new Error('Request failed!'); \r\n  } \r\n   catch(error){ \r\n      console.log(error); \r\n   } \r\n}\r\n\r\nasync function supprimerAuto() { \r\n    try{ \r\n    const response = await fetch(API + autoID, { \r\n      method:'delete', \r\n    }); \r\n    if(response.ok){ \r\n      //const jsonResponse = await response.json(); \r\n      props.history.push(\"/\");\r\n      toast.error(\"Supression de l'auto \");\r\n\r\n      return response; \r\n    } \r\n    throw new Error('Request failed!'); \r\n} \r\n catch(error){ \r\n    console.log(error); \r\n } \r\n}\r\n\r\n  function handleEdit(event){\r\n    event.preventDefault();\r\n    \r\n    const marque = document.getElementById('marque').value;\r\n    const image = document.getElementById('image').value;\r\n    const kilometrage = document.getElementById('kilometrage').value;\r\n    const annee = document.getElementById('annee').value;\r\n    const prix = document.getElementById('prix').value;\r\n   \r\n    editerAuto(marque,image,kilometrage,annee,prix);\r\n\r\n  }\r\n\r\n  function handleImage(event){\r\n    const image = document.getElementById('image').value;\r\n    setImage(image);\r\n  }\r\n    return (\r\n      <>\r\n       <Form>\r\n       <Form.Group controlId=\"marque\">\r\n            <Form.Label>Marque</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Marque\" defaultValue={donneesRecues.marque}/>\r\n     </Form.Group>\r\n     <Form.Group controlId=\"image\">\r\n            <Form.Label>Image</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"image\"  onBlur={handleImage} defaultValue={donneesRecues.image}/>\r\n     </Form.Group>\r\n     {image !== \"\" && <Image src={image} rounded width=\"125\"/>}\r\n     <Form.Group controlId=\"kilometrage\" >\r\n            <Form.Label>kilometrage</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Kilometrage\" defaultValue={donneesRecues.kilometrage}/>\r\n     </Form.Group>\r\n     <Form.Group controlId=\"annee\">\r\n            <Form.Label>annee</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Annee\" defaultValue={donneesRecues.annee}/>\r\n     </Form.Group>\r\n     <Form.Group controlId=\"prix\">\r\n            <Form.Label>Prix</Form.Label>\r\n            <Form.Control type=\"text\" placeholder=\"Prix\" defaultValue={donneesRecues.prix} />\r\n     </Form.Group>\r\n\r\n        <Button variant=\"primary\" type=\"submit\" onClick={handleEdit}>\r\n            Soumettre\r\n        </Button>\r\n        </Form>\r\n        <p className=\"btn btn-danger mt-5\" onClick={supprimerAuto}>Supprimer auto</p>\r\n      </>\r\n    );\r\n  }\r\n\r\n  export default FormEditerAuto;","import React from \"react\";\r\n\r\nexport class PageNotFound extends React.Component {\r\n    render() {\r\n        return ( <>\r\n            < img src = { \"https://cdn.dribbble.com/users/1592487/screenshots/6678531/404.png\" }\r\n            width = \"1400px\" / >\r\n            </>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {Auto} from './Auto';\r\nimport {Container, Row} from 'react-bootstrap';\r\nimport {AjouterAuto} from './AjouterAuto';\r\nimport { FormAjouterAuto } from \"./FormAjouterAuto\";\r\nimport AfficherAuto from './AfficherAuto';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport {Menu} from './Menu';\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport FormEditerAuto from './FormEditerAuto';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {PageNotFound} from './PageNotFound';\r\nimport BoutonInstallPWA from \"./BoutonInstallPWA\";\r\n\r\nfunction App() {\r\n    return ( <div> \r\n        <Container> \r\n    \r\n        <Router>\r\n        <ToastContainer autoClose={3000} hideProgressBar />\r\n            <Menu/>\r\n           \r\n      <Switch>\r\n        <Route path=\"/\" exact component={AfficherAuto} />\r\n        <Route path=\"/ajouter\" component={FormAjouterAuto} />\r\n        <Route path=\"/TypeVoiture/:marque\" component={FormEditerAuto} />\r\n        <Route component={PageNotFound} />\r\n      </Switch>\r\n      </Router>\r\n    \r\n         \r\n           \r\n         \r\n        </Container>\r\n        </div>);\r\n    }\r\n\r\n    export default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from './serviceWorker';\nimport './style.scss';\n\n\nReactDOM.render( \n    <React.StrictMode >\n        \n        \n        <App />\n        \n\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();"],"sourceRoot":""}